Finding Title,Finding Description & Remediation,status,First Seen,severity,confidence,triage_state,triaged_at,triage_comment,state_updated_at,repository,location
go.grpc.security.grpc-server-insecure-connection.grpc-server-insecure-connection,"Found an insecure gRPC server without 'grpc.Creds()' or options with credentials. This allows for a connection without encryption to this server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Include credentials derived from an SSL certificate in order to create a secure gRPC connection. You can create credentials using 'credentials.NewServerTLSFromFile(""cert.pem"", ""cert.key"")'.",reviewing,2024-08-12T02:08:56.940212Z,high,high,reviewing,2024-08-12 02:08:57.124892+00:00,This needs to be fixed,2024-08-12 02:08:56.937183+00:00,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/shippingservice/main.go', 'line': 85, 'column': 9, 'end_line': 85, 'end_column': 25}"
go.grpc.security.grpc-server-insecure-connection.grpc-server-insecure-connection,"Found an insecure gRPC server without 'grpc.Creds()' or options with credentials. This allows for a connection without encryption to this server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Include credentials derived from an SSL certificate in order to create a secure gRPC connection. You can create credentials using 'credentials.NewServerTLSFromFile(""cert.pem"", ""cert.key"")'.",open,2024-08-12T02:08:56.940212Z,high,high,untriaged,,,2024-08-12 02:08:56.937169+00:00,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/shippingservice/main.go', 'line': 88, 'column': 9, 'end_line': 88, 'end_column': 25}"
javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",open,2024-08-12T02:08:56.940212Z,medium,low,untriaged,,,2024-08-12 02:08:56.937155+00:00,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/paymentservice/server.js', 'line': 37, 'column': 45, 'end_line': 37, 'end_column': 54}"
javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",open,2024-08-12T02:08:56.940212Z,medium,low,untriaged,,,2024-08-12 02:08:56.937121+00:00,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/paymentservice/server.js', 'line': 38, 'column': 40, 'end_line': 38, 'end_column': 49}"
dockerfile.security.missing-user-entrypoint.missing-user-entrypoint,"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",open,2024-08-05T02:25:53.068781Z,high,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/loadgenerator/Dockerfile', 'line': 35, 'column': 1, 'end_line': 35, 'end_column': 80}"
javascript.grpc.security.grpc-nodejs-insecure-connection.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine.",open,2024-08-05T02:25:53.068781Z,high,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/currencyservice/client.js', 'line': 21, 'column': 1, 'end_line': 29, 'end_column': 37}"
python.lang.best-practice.sleep.arbitrary-sleep,time.sleep() call; did you mean to leave this in?,open,2024-08-05T02:25:53.068781Z,high,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/emailservice/email_server.py', 'line': 134, 'column': 7, 'end_line': 134, 'end_column': 23}"
python.lang.best-practice.sleep.arbitrary-sleep,time.sleep() call; did you mean to leave this in?,open,2024-08-05T02:25:53.068781Z,high,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/emailservice/email_server.py', 'line': 158, 'column': 9, 'end_line': 158, 'end_column': 23}"
python.lang.best-practice.sleep.arbitrary-sleep,time.sleep() call; did you mean to leave this in?,open,2024-08-05T02:25:53.068781Z,high,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/recommendationservice/recommendation_server.py', 'line': 61, 'column': 9, 'end_line': 61, 'end_column': 23}"
python.lang.best-practice.sleep.arbitrary-sleep,time.sleep() call; did you mean to leave this in?,open,2024-08-05T02:25:53.068781Z,high,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/recommendationservice/recommendation_server.py', 'line': 151, 'column': 13, 'end_line': 151, 'end_column': 30}"
go.lang.security.audit.crypto.math_random.math-random-used,Do not use `math/rand`. Use `crypto/rand` instead.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,2024-07-29 01:57:25.065230+00:00,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/handlers.go', 'line': 21, 'column': 3, 'end_line': 21, 'end_column': 12}"
go.lang.security.audit.crypto.math_random.math-random-used,Do not use `math/rand`. Use `crypto/rand` instead.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/shippingservice/tracker.go', 'line': 19, 'column': 3, 'end_line': 19, 'end_column': 12}"
go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly,A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Cookie.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/handlers.go', 'line': 418, 'column': 22, 'end_line': 422, 'end_column': 4}"
go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly,A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Cookie.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/middleware.go', 'line': 97, 'column': 23, 'end_line': 101, 'end_column': 5}"
go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure,A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/handlers.go', 'line': 418, 'column': 22, 'end_line': 422, 'end_column': 4}"
go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure,A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/middleware.go', 'line': 97, 'column': 23, 'end_line': 101, 'end_column': 5}"
go.lang.security.audit.net.use-tls.use-tls,Found an HTTP server without TLS. Use 'http.ListenAndServeTLS' instead. See https://golang.org/pkg/net/http/#ListenAndServeTLS for more information.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/main.go', 'line': 159, 'column': 12, 'end_line': 159, 'end_column': 58}"
javascript.express.security.audit.xss.mustache.var-in-href.var-in-href,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.",open,2024-08-05T02:25:53.068781Z,medium,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/templates/ad.html', 'line': 21, 'column': 9, 'end_line': 21, 'end_column': 67}"
python.django.security.audit.xss.template-href-var.template-href-var,Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.,open,2024-08-05T02:25:53.068781Z,medium,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/templates/ad.html', 'line': 21, 'column': 12, 'end_line': 21, 'end_column': 35}"
python.django.security.django-no-csrf-token.django-no-csrf-token,Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/templates/cart.html', 'line': 45, 'column': 29, 'end_line': 52, 'end_column': 36}"
python.django.security.django-no-csrf-token.django-no-csrf-token,Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/templates/header.html', 'line': 71, 'column': 29, 'end_line': 77, 'end_column': 36}"
python.django.security.django-no-csrf-token.django-no-csrf-token,Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.,open,2024-08-05T02:25:53.068781Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/templates/product.html', 'line': 38, 'column': 11, 'end_line': 52, 'end_column': 18}"
python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2,"Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS.",open,2024-08-05T02:25:53.068781Z,medium,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/emailservice/email_server.py', 'line': 45, 'column': 7, 'end_line': 48, 'end_column': 2}"
python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2,"Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS.",open,2024-08-05T02:25:53.068781Z,medium,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/emailservice/email_server.py', 'line': 90, 'column': 22, 'end_line': 90, 'end_column': 52}"
python.flask.security.xss.audit.template-href-var.template-href-var,Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.,open,2024-08-05T02:25:53.068781Z,medium,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/templates/ad.html', 'line': 21, 'column': 12, 'end_line': 21, 'end_column': 35}"
trailofbits.go.string-to-int-signedness-cast.string-to-int-signedness-cast,Downcasting or changing sign of an integer with `$CAST_METHOD` method,open,2024-08-05T02:25:53.068781Z,medium,high,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/handlers.go', 'line': 214, 'column': 2, 'end_line': 231, 'end_column': 3}"
dgryski.semgrep-go.contexttodo.context-todo,Consider to use well-defined context,open,2024-08-05T02:25:53.068781Z,medium,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/checkoutservice/main.go', 'line': 357, 'column': 73, 'end_line': 357, 'end_column': 87}"
go.net.dos.slowloris-dos-functions.slowloris-dos-functions,"These functions do not allow to set a a timeout value for reading requests. As a result, the app server may be vulnerable to a Slowloris Denial-of-Service (DoS) attack. Slowloris attacks exploit the fact that HTTP servers keep the connection active if the request received is incomplete. To mitigate this, implement a `Server` and set the timeout with `ReadHeaderTimeout`.",open,2024-08-05T02:25:53.068781Z,medium,low,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/frontend/main.go', 'line': 159, 'column': 12, 'end_line': 159, 'end_column': 58}"
java.servlets.security.crlf-injection-logs-deepsemgrep.crlf-injection-logs-deepsemgrep,"When data from an untrusted source is put into a logger and not neutralized correctly, an attacker could forge log entries or include malicious content.",open,2024-07-07T23:55:57.036831Z,high,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/assistant-fix-custom-message.java', 'line': 14, 'column': 9, 'end_line': 14, 'end_column': 37}"
semgrep_demo.crlf-injection-logs-deepsemgrep-javaorg-copy,"When data from an untrusted source is put into a logger and not neutralized correctly, an attacker could forge log entries or include malicious content. Please use the Jsoup.clean() function to sanitize data.",open,2024-07-07T23:55:57.036827Z,high,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/assistant-fix-custom-message.java', 'line': 14, 'column': 9, 'end_line': 14, 'end_column': 37}"
java.lang.security.audit.crlf-injection-logs.crlf-injection-logs,"When data from an untrusted source is put into a logger and not neutralized correctly, an attacker could forge log entries or include malicious content.",open,2024-07-07T23:55:57.036815Z,medium,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/assistant-fix-custom-message.java', 'line': 13, 'column': 9, 'end_line': 14, 'end_column': 37}"
javascript.express.security.injection.tainted-sql-string.tainted-sql-string,"Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",open,2024-07-07T23:55:51.376805Z,high,medium,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/assistant-fix-sqli-sequelize.ts', 'line': 5, 'column': 76, 'end_line': 5, 'end_column': 84}"
javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection,"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",open,2024-07-07T23:55:51.376794Z,high,high,untriaged,,,,"{'name': 'Semgrep-Demo/new-project', 'url': 'https://github.com/Semgrep-Demo/new-project'}","{'file_path': 'src/assistant-fix-sqli-sequelize.ts', 'line': 5, 'column': 30, 'end_line': 5, 'end_column': 164}"
