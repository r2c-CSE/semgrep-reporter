[{"id": 84661218, "ref": "main", "syntactic_id": "d714cedd1f192a57e6ee7bbc1a6d2251", "match_based_id": "3ffbf5f6c16e6e43ae9ce06b47e7d449d26c58274b5f8b2fb2fde37d5e8f4355e1793b67a09532e8b5a280e71b8024d1bfc7d597a0917ba21bf561c16e98ff9a_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/public/js/jquery-3.2.1-min.js#L4", "first_seen_scan_id": 35686421, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-28T17:02:07.494019Z", "relevant_since": "2024-08-28T17:02:07.491027Z", "rule_name": "javascript.express.security.audit.remote-property-injection.remote-property-injection", "rule_message": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties.", "location": {"file_path": "public/js/jquery-3.2.1-min.js", "line": 4, "column": 21458, "end_line": 4, "end_column": 21886}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.remote-property-injection.remote-property-injection", "message": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties.", "confidence": "low", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cryptographic Issues"], "cwe_names": ["CWE-522: Insufficiently Protected Credentials"], "owasp_names": ["A02:2017 - Broken Authentication", "A04:2021 - Insecure Design"]}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "vendored code", "risk": "low"}}}, {"id": 82288427, "ref": "main", "syntactic_id": "310b53bb4efebabfcbf81527ac15eddd", "match_based_id": "b7fc827d2ccd406515c693e9a077a5be2fcda7eb94d009c38a8ac9090220988eecb957c8c608a83a6f7772e5175068771b829814eee048d6c38eb26a8c95721c_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/database/database.go#L24", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941697Z", "relevant_since": "2024-08-19T14:19:00.924282Z", "rule_name": "go.lang.security.audit.sqli.gosql-sqli.gosql-sqli", "rule_message": "Detected string concatenation with a non-literal variable in a \"database/sql\" Go SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use prepared statements with the 'Prepare' and 'PrepareContext' calls.", "location": {"file_path": "util/database/database.go", "line": 24, "column": 11, "end_line": 24, "end_column": 68}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.sqli.gosql-sqli.gosql-sqli", "message": "Detected string concatenation with a non-literal variable in a \"database/sql\" Go SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can use prepared statements with the 'Prepare' and 'PrepareContext' calls.", "confidence": "low", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["SQL Injection"], "cwe_names": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "owasp_names": ["A01:2017 - Injection", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288426, "ref": "main", "syntactic_id": "43cd987ace59a5e3880c99b60e3358bd", "match_based_id": "2d8224e795c12a57fec389068876808531773f6a5ae388c8ba67cdb124d3b2a9ce96895341427a347e6463731dc76ee2e18c2de1d0af1a7b62692aa8b7866133_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.header.html#L13", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941683Z", "relevant_since": "2024-08-19T14:19:00.924276Z", "rule_name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "rule_message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "location": {"file_path": "templates/template.header.html", "line": 13, "column": 41, "end_line": 13, "end_column": 52}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288425, "ref": "main", "syntactic_id": "7fb4c52511c2e16bc41026882a94fa11", "match_based_id": "2d8224e795c12a57fec389068876808531773f6a5ae388c8ba67cdb124d3b2a9ce96895341427a347e6463731dc76ee2e18c2de1d0af1a7b62692aa8b7866133_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.header.html#L14", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941670Z", "relevant_since": "2024-08-19T14:19:00.924271Z", "rule_name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "rule_message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "location": {"file_path": "templates/template.header.html", "line": 14, "column": 41, "end_line": 14, "end_column": 52}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "python.django.security.audit.xss.var-in-script-tag.var-in-script-tag", "message": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`).", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288424, "ref": "main", "syntactic_id": "03c88312ded07efa5b0b6bfb8243a394", "match_based_id": "69c1b5edacf1b976e2d6b135fd2e2ddea60de299eafb00404bba81ada4385de925c1bb778f7e4d30d4a635d13ac08f8912a03681942722db7375d252d8fd147c_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/setup/function.go#L58", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941656Z", "relevant_since": "2024-08-19T14:19:00.924266Z", "rule_name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "rule_message": "superfluous nil err check before return", "location": {"file_path": "setup/function.go", "line": 58, "column": 2, "end_line": 61, "end_column": 12}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["other"], "rule": {"name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "message": "superfluous nil err check before return", "confidence": "low", "category": "other", "subcategories": [], "vulnerability_classes": [], "cwe_names": [], "owasp_names": []}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288423, "ref": "main", "syntactic_id": "2dadd4639c0053c59fd34a6b29094e94", "match_based_id": "69c1b5edacf1b976e2d6b135fd2e2ddea60de299eafb00404bba81ada4385de925c1bb778f7e4d30d4a635d13ac08f8912a03681942722db7375d252d8fd147c_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/setup/function.go#L74", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941643Z", "relevant_since": "2024-08-19T14:19:00.924260Z", "rule_name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "rule_message": "superfluous nil err check before return", "location": {"file_path": "setup/function.go", "line": 74, "column": 2, "end_line": 77, "end_column": 12}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["other"], "rule": {"name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "message": "superfluous nil err check before return", "confidence": "low", "category": "other", "subcategories": [], "vulnerability_classes": [], "cwe_names": [], "owasp_names": []}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288422, "ref": "main", "syntactic_id": "35225131e7f79a06ec20d39ea9839546", "match_based_id": "ee43948234080346b74757caf4c038cea3aff8d6c49d341388696e684c74e176a1c708e25e6b0f040074ad626fb276c3a7c9d0889c9636b239d6ef4e32e8c0f0_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/idor/function.go#L50", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941629Z", "relevant_since": "2024-08-19T14:19:00.924255Z", "rule_name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "rule_message": "superfluous nil err check before return", "location": {"file_path": "vulnerability/idor/function.go", "line": 50, "column": 2, "end_line": 53, "end_column": 12}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["other"], "rule": {"name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "message": "superfluous nil err check before return", "confidence": "low", "category": "other", "subcategories": [], "vulnerability_classes": [], "cwe_names": [], "owasp_names": []}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288421, "ref": "main", "syntactic_id": "794cfb57b089dcbe1f32b64e0211d596", "match_based_id": "ee43948234080346b74757caf4c038cea3aff8d6c49d341388696e684c74e176a1c708e25e6b0f040074ad626fb276c3a7c9d0889c9636b239d6ef4e32e8c0f0_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/idor/function.go#L76", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941616Z", "relevant_since": "2024-08-19T14:19:00.924248Z", "rule_name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "rule_message": "superfluous nil err check before return", "location": {"file_path": "vulnerability/idor/function.go", "line": 76, "column": 2, "end_line": 79, "end_column": 12}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["other"], "rule": {"name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "message": "superfluous nil err check before return", "confidence": "low", "category": "other", "subcategories": [], "vulnerability_classes": [], "cwe_names": [], "owasp_names": []}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288420, "ref": "main", "syntactic_id": "48e8558bfb564213a497c25ac6245213", "match_based_id": "a757b70a3f388d736d4fd6fd288941967e8ef81fb2db9730f1a324b4d61cf5a332dc8044ecb3b1a9d42140908041902509bba5ab476fc541bbbdaa5a95b8e2bd_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/sqli/function.go#L76", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941602Z", "relevant_since": "2024-08-19T14:19:00.924243Z", "rule_name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "rule_message": "superfluous nil err check before return", "location": {"file_path": "vulnerability/sqli/function.go", "line": 76, "column": 2, "end_line": 79, "end_column": 12}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["other"], "rule": {"name": "dgryski.semgrep-go.errnilcheck.err-nil-check", "message": "superfluous nil err check before return", "confidence": "low", "category": "other", "subcategories": [], "vulnerability_classes": [], "cwe_names": [], "owasp_names": []}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288419, "ref": "main", "syntactic_id": "4aeec3b6147ec2821d52ffbec6c772e1", "match_based_id": "0512fea9559015082809fa1f5e73ab1ca31036a34ae11879fe4c5e03ce4e2eab32d391dbbb8be79f54e5e8e1ca7cda1b6d69ce766cf858a668fe23fad2e91d9a_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/config/config.go#L24", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941589Z", "relevant_since": "2024-08-19T14:19:00.924238Z", "rule_name": "dgryski.semgrep-go.ioutil.deprecated-ioutil-readfile", "rule_message": "ioutil.ReadFile is deprecated", "location": {"file_path": "util/config/config.go", "line": 24, "column": 14, "end_line": 24, "end_column": 51}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["other"], "rule": {"name": "dgryski.semgrep-go.ioutil.deprecated-ioutil-readfile", "message": "ioutil.ReadFile is deprecated", "confidence": "low", "category": "other", "subcategories": [], "vulnerability_classes": [], "cwe_names": [], "owasp_names": []}, "external_ticket": null, "severity": "high", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288418, "ref": "main", "syntactic_id": "da85580ae1a61e4fc7b0a02aa5c34a01", "match_based_id": "52bfbf47de29a1069cde7a71f3a4009f05030810b3a2e21eebcabaf10b288de06f97eb6c8a73f92832d3e4ed7a2e64c95df7b244f38f55c356f6fd5cc5ffe673_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/user/session/session.go#L28", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941575Z", "relevant_since": "2024-08-19T14:19:00.924232Z", "rule_name": "go.gorilla.security.audit.session-cookie-missing-httponly.session-cookie-missing-httponly", "rule_message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Options struct.", "location": {"file_path": "user/session/session.go", "line": 28, "column": 20, "end_line": 32, "end_column": 3}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.gorilla.security.audit.session-cookie-missing-httponly.session-cookie-missing-httponly", "message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Options struct.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288417, "ref": "main", "syntactic_id": "171030a2d0cfef4e4a8f853830e9a11e", "match_based_id": "52bfbf47de29a1069cde7a71f3a4009f05030810b3a2e21eebcabaf10b288de06f97eb6c8a73f92832d3e4ed7a2e64c95df7b244f38f55c356f6fd5cc5ffe673_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/user/session/session.go#L67", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941561Z", "relevant_since": "2024-08-19T14:19:00.924227Z", "rule_name": "go.gorilla.security.audit.session-cookie-missing-httponly.session-cookie-missing-httponly", "rule_message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Options struct.", "location": {"file_path": "user/session/session.go", "line": 67, "column": 20, "end_line": 70, "end_column": 3}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.gorilla.security.audit.session-cookie-missing-httponly.session-cookie-missing-httponly", "message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Options struct.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288416, "ref": "main", "syntactic_id": "fb9bea448fb2fc6b4cd8c80eb69a7abc", "match_based_id": "e98e2de1e24b9649619932407c48e01221795232ef6e335388858a60cc2ad1f204f379742c7cc50ae6ab1978a7226dc30ee3dfb2f9ac2fbbf16f7e4de2449675_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/user/session/session.go#L28", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941548Z", "relevant_since": "2024-08-19T14:19:00.924222Z", "rule_name": "go.gorilla.security.audit.session-cookie-missing-secure.session-cookie-missing-secure", "rule_message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "location": {"file_path": "user/session/session.go", "line": 28, "column": 20, "end_line": 32, "end_column": 3}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.gorilla.security.audit.session-cookie-missing-secure.session-cookie-missing-secure", "message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288415, "ref": "main", "syntactic_id": "be8e3059e2944592682e407e893fc8d2", "match_based_id": "e98e2de1e24b9649619932407c48e01221795232ef6e335388858a60cc2ad1f204f379742c7cc50ae6ab1978a7226dc30ee3dfb2f9ac2fbbf16f7e4de2449675_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/user/session/session.go#L67", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941534Z", "relevant_since": "2024-08-19T14:19:00.924216Z", "rule_name": "go.gorilla.security.audit.session-cookie-missing-secure.session-cookie-missing-secure", "rule_message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "location": {"file_path": "user/session/session.go", "line": 67, "column": 20, "end_line": 70, "end_column": 3}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.gorilla.security.audit.session-cookie-missing-secure.session-cookie-missing-secure", "message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288414, "ref": "main", "syntactic_id": "bb70cbad8b9884b2355f622d4f41b22e", "match_based_id": "b3fb12d0f0077eadd1c5ee8c0a4cbe0b4e29327a118a3ab89be7857899abe7ddc89c19a46f07e8062922ad0700a3c53568fffceb2ce13ba61d0f6764e5c83b57_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/user/user.go#L160", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941521Z", "relevant_since": "2024-08-19T14:19:00.924211Z", "rule_name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "rule_message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.", "location": {"file_path": "user/user.go", "line": 160, "column": 12, "end_line": 160, "end_column": 21}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Insecure Hashing Algorithm"], "cwe_names": ["CWE-328: Use of Weak Hash"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288413, "ref": "main", "syntactic_id": "d0f1984db9405264354765d5a558b04a", "match_based_id": "bee14afc3d2b5dbc5419b7cee3c0e9d7e34963700b20a65dab80c126550134c1cd71bf8ffefa280a20651010fcc7b4277a16caadd7305e12c78e77750d3ef26f_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/csa/csa.go#L62", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941494Z", "relevant_since": "2024-08-19T14:19:00.924204Z", "rule_name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "rule_message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.", "location": {"file_path": "vulnerability/csa/csa.go", "line": 62, "column": 12, "end_line": 62, "end_column": 21}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Insecure Hashing Algorithm"], "cwe_names": ["CWE-328: Use of Weak Hash"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288412, "ref": "main", "syntactic_id": "e813dc59fa157a91f14d7f34ab495787", "match_based_id": "4bf478768c8f834e473b4f45c4f4d2b5aee869e020763164f783791b8c26f29e9bc9ece99d848d27ca5beb47a3cbaff80b0e4d5c782013de6468244b6e3790a4_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/idor/idor.go#L164", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941481Z", "relevant_since": "2024-08-19T14:19:00.924199Z", "rule_name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "rule_message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.", "location": {"file_path": "vulnerability/idor/idor.go", "line": 164, "column": 12, "end_line": 164, "end_column": 21}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Insecure Hashing Algorithm"], "cwe_names": ["CWE-328: Use of Weak Hash"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288411, "ref": "main", "syntactic_id": "1aeb399b8e03447794040656bfee945e", "match_based_id": "a9ee024dc44d0185c5c82eea4623ce25fa9479a414f5084e4cfebc49ac750d7263f3174ddb3cee2c36425a04dc363d0c7dc3cb8547da0c388eaec83a42df9c7e_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/database/database.go#L24", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941467Z", "relevant_since": "2024-08-19T14:19:00.924193Z", "rule_name": "go.lang.security.audit.database.string-formatted-query.string-formatted-query", "rule_message": "String-formatted SQL query detected. This could lead to SQL injection if the string is not sanitized properly. Audit this call to ensure the SQL is not manipulable by external data.", "location": {"file_path": "util/database/database.go", "line": 24, "column": 11, "end_line": 24, "end_column": 68}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.database.string-formatted-query.string-formatted-query", "message": "String-formatted SQL query detected. This could lead to SQL injection if the string is not sanitized properly. Audit this call to ensure the SQL is not manipulable by external data.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["SQL Injection"], "cwe_names": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "owasp_names": ["A01:2017 - Injection", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288410, "ref": "main", "syntactic_id": "69e681e256d9b2cf2bc65c371475bfff", "match_based_id": "08e160465843e3be2d0822660d53dbfd58ec76bebf19692f731abd5a4ae6a0753e612fbb181f76c000ba84f7c286504d282a7b5ce594ba3021dba80d8877794e_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/sqli/function.go#L37", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941454Z", "relevant_since": "2024-08-19T14:19:00.924187Z", "rule_name": "go.lang.security.audit.database.string-formatted-query.string-formatted-query", "rule_message": "String-formatted SQL query detected. This could lead to SQL injection if the string is not sanitized properly. Audit this call to ensure the SQL is not manipulable by external data.", "location": {"file_path": "vulnerability/sqli/function.go", "line": 37, "column": 2, "end_line": 40, "end_column": 27}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.database.string-formatted-query.string-formatted-query", "message": "String-formatted SQL query detected. This could lead to SQL injection if the string is not sanitized properly. Audit this call to ensure the SQL is not manipulable by external data.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["SQL Injection"], "cwe_names": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "owasp_names": ["A01:2017 - Injection", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288409, "ref": "main", "syntactic_id": "415bdbdd1533bf6dd34935537b197d4c", "match_based_id": "ce5b400a7cd448fbf50eacb26389d12da0f8078009ab7da8aea5be023d8c1b6f1349dbffc6e7a017a61f6e0e324c34e9077c9d1a3d1b93b5a1092e061b89b8d9_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/cookie.go#L32", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941440Z", "relevant_since": "2024-08-19T14:19:00.924181Z", "rule_name": "go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly", "rule_message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Cookie.", "location": {"file_path": "util/cookie.go", "line": 32, "column": 12, "end_line": 37, "end_column": 3}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly", "message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Cookie.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288408, "ref": "main", "syntactic_id": "4247b78ed6ad0e1df17dd8d65354a0b1", "match_based_id": "ce5b400a7cd448fbf50eacb26389d12da0f8078009ab7da8aea5be023d8c1b6f1349dbffc6e7a017a61f6e0e324c34e9077c9d1a3d1b93b5a1092e061b89b8d9_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/cookie.go#L48", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941427Z", "relevant_since": "2024-08-19T14:19:00.924176Z", "rule_name": "go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly", "rule_message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Cookie.", "location": {"file_path": "util/cookie.go", "line": 48, "column": 14, "end_line": 52, "end_column": 4}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.cookie-missing-httponly.cookie-missing-httponly", "message": "A session cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie which mitigates XSS attacks. Set the 'HttpOnly' flag by setting 'HttpOnly' to 'true' in the Cookie.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288407, "ref": "main", "syntactic_id": "ed904ccefe3b6f518be92d215fcf45be", "match_based_id": "5fb71816eede7bdb70783f5141d22f2bd0ac4daf225ef9383f1421057094943b56a0ee074ff8a40b60ab4eba533d51c5b0e848122a3702f20082f7455d43c06d_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/cookie.go#L32", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941413Z", "relevant_since": "2024-08-19T14:19:00.924170Z", "rule_name": "go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure", "rule_message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "location": {"file_path": "util/cookie.go", "line": 32, "column": 12, "end_line": 37, "end_column": 3}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure", "message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288406, "ref": "main", "syntactic_id": "7ecefed3db98954299d9d7c97c1fb15c", "match_based_id": "5fb71816eede7bdb70783f5141d22f2bd0ac4daf225ef9383f1421057094943b56a0ee074ff8a40b60ab4eba533d51c5b0e848122a3702f20082f7455d43c06d_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/cookie.go#L48", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941400Z", "relevant_since": "2024-08-19T14:19:00.924164Z", "rule_name": "go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure", "rule_message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "location": {"file_path": "util/cookie.go", "line": 48, "column": 14, "end_line": 52, "end_column": 4}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.cookie-missing-secure.cookie-missing-secure", "message": "A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cookie Security"], "cwe_names": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "owasp_names": ["A05:2021 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288405, "ref": "main", "syntactic_id": "b163cc57d012d5cd05aa4a60ae5709e0", "match_based_id": "98ed024cb9de034e9f82390154d8dd2a58134675b4fe011261ae3da7579c097f4906471a3492e7b3f20e320d96f7f55d3d4abb4a27c2f3d44c4196dba29a9876_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L52", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941387Z", "relevant_since": "2024-08-19T14:19:00.924157Z", "rule_name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "rule_message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 52, "column": 3, "end_line": 65, "end_column": 4}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288404, "ref": "main", "syntactic_id": "e1798f0a2e50af24e342d3195127d94c", "match_based_id": "887f822f4c511d161b2345520fdb0c4f348c8e43d57c3932b85874f39ed9051f3994924c2bac79e4e44111d7079161abefd3c2bcb435f0007ac0d5a7c32fa21a_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L53", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941373Z", "relevant_since": "2024-08-19T14:19:00.924152Z", "rule_name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "rule_message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 53, "column": 3, "end_line": 65, "end_column": 4}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288403, "ref": "main", "syntactic_id": "10d383b59a7dc79363ec0f3fef80f15e", "match_based_id": "55e2e04402a48b4b68f6747f43ad5a8ece3194a996fde03886cd08ae12246627a9cc35aaf5eb3857593b2af0dfb928eb5d64d444268bc4e48536b3c8acd7c111_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L61", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941360Z", "relevant_since": "2024-08-19T14:19:00.924146Z", "rule_name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "rule_message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 61, "column": 4, "end_line": 63, "end_column": 38}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288402, "ref": "main", "syntactic_id": "bb20b6523083b03563eaf46d14e377f0", "match_based_id": "9dae2f8b647f2e8f6741cee6e0fa799c8119d690e03840798bf76988fb747ad555a67b9a92045b88a551776d70fb2827b9d4406f4c8a3f1219c3aae1f24440b2_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L96", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941346Z", "relevant_since": "2024-08-19T14:19:00.924141Z", "rule_name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "rule_message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 96, "column": 2, "end_line": 100, "end_column": 44}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "message": "Found a formatted template string passed to 'template.HTML()'. 'template.HTML()' does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288401, "ref": "main", "syntactic_id": "ef0d5b15cca5549fffb7bedc94d860af", "match_based_id": "cf0db0b07c7aa688e1ab00309174add47e97e55dc64d4cf1c829ba86945018847eb3e6907958598e32f3f103e4ca0ce5d5372a317b9ce78e9824f76b63b0612c_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/template.go#L35", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941333Z", "relevant_since": "2024-08-19T14:19:00.924135Z", "rule_name": "go.lang.security.audit.xss.no-direct-write-to-responsewriter.no-direct-write-to-responsewriter", "rule_message": "Detected directly writing or similar in 'http.ResponseWriter.write()'. This bypasses HTML escaping that prevents cross-site scripting vulnerabilities. Instead, use the 'html/template' package and render data using 'template.Execute()'.", "location": {"file_path": "util/template.go", "line": 35, "column": 2, "end_line": 35, "end_column": 12}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.xss.no-direct-write-to-responsewriter.no-direct-write-to-responsewriter", "message": "Detected directly writing or similar in 'http.ResponseWriter.write()'. This bypasses HTML escaping that prevents cross-site scripting vulnerabilities. Instead, use the 'html/template' package and render data using 'template.Execute()'.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288400, "ref": "main", "syntactic_id": "3021f50fc0a677d12161eaa26f4bddb3", "match_based_id": "dd24a2df2b5ce9cc58e4f5a89c9c81b08b1bb7e510e989bdf8679173deebe92df80391d2837685f450b92819e657a06da95d2e7d8eeb81a1e00efa3bb941d7de_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/util/template.go#L45", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941319Z", "relevant_since": "2024-08-19T14:19:00.924129Z", "rule_name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "rule_message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "location": {"file_path": "util/template.go", "line": 45, "column": 9, "end_line": 45, "end_column": 28}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288399, "ref": "main", "syntactic_id": "f1475f96de29c9c723beaa5cb4910937", "match_based_id": "b1ea48efccb301ffb755b6cc772fbcd1d7a7fa09cda995f3d7776e71da1656af716f7e04d186c1e1ddc4cdd8a4127224414f3ee1a0995e612f6c39b837c11f5f_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L58", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941306Z", "relevant_since": "2024-08-19T14:19:00.924124Z", "rule_name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "rule_message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 58, "column": 20, "end_line": 58, "end_column": 40}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288398, "ref": "main", "syntactic_id": "5f7742ad3bc63cb6697c667fbc70a6a5", "match_based_id": "b1ea48efccb301ffb755b6cc772fbcd1d7a7fa09cda995f3d7776e71da1656af716f7e04d186c1e1ddc4cdd8a4127224414f3ee1a0995e612f6c39b837c11f5f_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L59", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941292Z", "relevant_since": "2024-08-19T14:19:00.924118Z", "rule_name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "rule_message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 59, "column": 19, "end_line": 59, "end_column": 42}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288397, "ref": "main", "syntactic_id": "fe237f2c8bd5e5219810b4dd6a8cfeac", "match_based_id": "b1ea48efccb301ffb755b6cc772fbcd1d7a7fa09cda995f3d7776e71da1656af716f7e04d186c1e1ddc4cdd8a4127224414f3ee1a0995e612f6c39b837c11f5f_2", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L62", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941278Z", "relevant_since": "2024-08-19T14:19:00.924112Z", "rule_name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "rule_message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 62, "column": 20, "end_line": 62, "end_column": 40}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288396, "ref": "main", "syntactic_id": "fba1c3c3d1afa4207aa108e0f604dfba", "match_based_id": "b1ea48efccb301ffb755b6cc772fbcd1d7a7fa09cda995f3d7776e71da1656af716f7e04d186c1e1ddc4cdd8a4127224414f3ee1a0995e612f6c39b837c11f5f_3", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L63", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941265Z", "relevant_since": "2024-08-19T14:19:00.924106Z", "rule_name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "rule_message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 63, "column": 19, "end_line": 63, "end_column": 38}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288395, "ref": "main", "syntactic_id": "f92dc6bd49035ace2d7448e006b5b96d", "match_based_id": "b1ea48efccb301ffb755b6cc772fbcd1d7a7fa09cda995f3d7776e71da1656af716f7e04d186c1e1ddc4cdd8a4127224414f3ee1a0995e612f6c39b837c11f5f_4", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L100", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941251Z", "relevant_since": "2024-08-19T14:19:00.924101Z", "rule_name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "rule_message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 100, "column": 21, "end_line": 100, "end_column": 44}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.audit.xss.template-html-does-not-escape.unsafe-template-type", "message": "Semgrep could not determine that the argument to 'template.HTML()' is a constant. 'template.HTML()' and similar does not escape contents. Be absolutely sure there is no user-controlled data in this template. If user data can reach this template, you may have a XSS vulnerability. Instead, do not use this function and use 'template.Execute()'.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288394, "ref": "main", "syntactic_id": "f59b3158d55014e1576ad0dd6e62be07", "match_based_id": "5d3d62b2888ab2945b114d766c4638eaa68cfe98cdad1226df429229f24ad1bb48fbb9859894b6fc381132739ad7c4c855024fb05a344effbc69c7f133ab7e02_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L96", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.941238Z", "relevant_since": "2024-08-19T14:19:00.924095Z", "rule_name": "go.lang.security.injection.raw-html-format.raw-html-format", "rule_message": "Detected user input flowing into a manually constructed HTML string. You may be accidentally bypassing secure methods of rendering HTML by manually constructing HTML and this could create a cross-site scripting vulnerability, which could let attackers steal sensitive user data. Use the `html/template` package which will safely render HTML instead, or inspect that the HTML is rendered safely.", "location": {"file_path": "vulnerability/xss/xss.go", "line": 96, "column": 14, "end_line": 96, "end_column": 64}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.lang.security.injection.raw-html-format.raw-html-format", "message": "Detected user input flowing into a manually constructed HTML string. You may be accidentally bypassing secure methods of rendering HTML by manually constructing HTML and this could create a cross-site scripting vulnerability, which could let attackers steal sensitive user data. Use the `html/template` package which will safely render HTML instead, or inspect that the HTML is rendered safely.", "confidence": "medium", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288393, "ref": "main", "syntactic_id": "167648ed24cbb01d901075ec9ef2e51f", "match_based_id": "d69ddb9156a43a34bc8c6175130628122280bc42f53c22334893c4df337d1923b4658871ed41366413f87fdb99ffa8b54421d1741bf360c2f3fc99e930bf3b91_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L100", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "high", "created_at": "2024-08-19T14:19:00.941225Z", "relevant_since": "2024-08-19T14:19:00.924089Z", "rule_name": "go.net.xss.formatted-template-string-taint.formatted-template-string-taint", "rule_message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. For more information, see: [Go XSS prevention](https://semgrep.dev/docs/cheat-sheets/go-xss/).", "location": {"file_path": "vulnerability/xss/xss.go", "line": 100, "column": 21, "end_line": 100, "end_column": 44}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "go.net.xss.formatted-template-string-taint.formatted-template-string-taint", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. For more information, see: [Go XSS prevention](https://semgrep.dev/docs/cheat-sheets/go-xss/).", "confidence": "high", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A03:2021 - Injection", "A07:2017 - Cross-Site Scripting (XSS)"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288392, "ref": "main", "syntactic_id": "dfed6c3f31dbf5dc5ea4f7c7b8386638", "match_based_id": "83bf89531c89a9a076e4c9e4fd4ba97ea5e9fd08f92e98eed4a7d5af3f2f608ce471d4bfcca218e6bb290cab298e9a24211354a207ffaf8fdb8308f8e291b955_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/cart.html#L7", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941211Z", "relevant_since": "2024-08-19T14:19:00.924084Z", "rule_name": "html.security.audit.missing-integrity.missing-integrity", "rule_message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "location": {"file_path": "templates/cart.html", "line": 7, "column": 5, "end_line": 7, "end_column": 71}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.audit.missing-integrity.missing-integrity", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cryptographic Issues"], "cwe_names": ["CWE-353: Missing Support for Integrity Check"], "owasp_names": ["A08:2021 - Software and Data Integrity Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288391, "ref": "main", "syntactic_id": "afe6f09ee73a4d4e954b0b3641b287d5", "match_based_id": "80202bbea6b089c27c824418e8ac9470cfe9f65358dabf22fe947abfc76ca434c321c4fb9e426e55049bb27eeae899f53b15893a658f68ead83230b19acea980_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.login.html#L7", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941198Z", "relevant_since": "2024-08-19T14:19:00.924078Z", "rule_name": "html.security.audit.missing-integrity.missing-integrity", "rule_message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "location": {"file_path": "templates/template.login.html", "line": 7, "column": 5, "end_line": 7, "end_column": 94}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.audit.missing-integrity.missing-integrity", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cryptographic Issues"], "cwe_names": ["CWE-353: Missing Support for Integrity Check"], "owasp_names": ["A08:2021 - Software and Data Integrity Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "user authentication", "risk": "high"}}}, {"id": 82288390, "ref": "main", "syntactic_id": "7ae15218f31793b07901946ea705e6e6", "match_based_id": "75cb550a1e3a1050b19f5b07409377d348ca919b50de6fb604cbc07078c0fe1019cf321be976f6dc1658ab789a5016168877be26719bb3370e977ce90af13e04_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.login.html#L8", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941184Z", "relevant_since": "2024-08-19T14:19:00.924072Z", "rule_name": "html.security.audit.missing-integrity.missing-integrity", "rule_message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "location": {"file_path": "templates/template.login.html", "line": 8, "column": 5, "end_line": 8, "end_column": 119}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.audit.missing-integrity.missing-integrity", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cryptographic Issues"], "cwe_names": ["CWE-353: Missing Support for Integrity Check"], "owasp_names": ["A08:2021 - Software and Data Integrity Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "user authentication", "risk": "high"}}}, {"id": 82288389, "ref": "main", "syntactic_id": "3e4992b5f7a6d4207e9bb76542a8f670", "match_based_id": "aef54c4593efe18262c868514f3c8635adfd04ae6e4515009393ff1fe7154e8a0332eaafa591455ac5e5578546d354a9a6336f823fb1a3360bfa1f2bd485e28e_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.idor1.html#L56", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "high", "created_at": "2024-08-19T14:19:00.941171Z", "relevant_since": "2024-08-19T14:19:00.924066Z", "rule_name": "html.security.plaintext-http-link.plaintext-http-link", "rule_message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "location": {"file_path": "templates/template.idor1.html", "line": 56, "column": 21, "end_line": 56, "end_column": 210}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.plaintext-http-link.plaintext-http-link", "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "confidence": "high", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Mishandled Sensitive Information"], "cwe_names": ["CWE-319: Cleartext Transmission of Sensitive Information"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "PII", "risk": "high"}}}, {"id": 82288388, "ref": "main", "syntactic_id": "3580cbdd72c8a52128525d31c3d75f77", "match_based_id": "fb898d33721abfb5d50837f41441736b4b5e13ce5dc78229ff91aad0ddaa493593f3546cf365cb5c82e8cd5f6f359ad6d005449598f47cbc04689a02a8a50dec_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.idor2.html#L57", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "high", "created_at": "2024-08-19T14:19:00.941158Z", "relevant_since": "2024-08-19T14:19:00.924060Z", "rule_name": "html.security.plaintext-http-link.plaintext-http-link", "rule_message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "location": {"file_path": "templates/template.idor2.html", "line": 57, "column": 21, "end_line": 57, "end_column": 210}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.plaintext-http-link.plaintext-http-link", "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "confidence": "high", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Mishandled Sensitive Information"], "cwe_names": ["CWE-319: Cleartext Transmission of Sensitive Information"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288387, "ref": "main", "syntactic_id": "50d7737a76a4ac55a620196e173f05c2", "match_based_id": "b52065e548eb7fa160b2aa35441854572d3cb7283058d6588f2c8664c9ae3f9a1920e6faa42666ef17299a7de0bba404d6cd5501b1c382c89d4dd5fd1d872951_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sqli1.html#L19", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "high", "created_at": "2024-08-19T14:19:00.941144Z", "relevant_since": "2024-08-19T14:19:00.924054Z", "rule_name": "html.security.plaintext-http-link.plaintext-http-link", "rule_message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "location": {"file_path": "templates/template.sqli1.html", "line": 19, "column": 21, "end_line": 19, "end_column": 120}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.plaintext-http-link.plaintext-http-link", "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "confidence": "high", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Mishandled Sensitive Information"], "cwe_names": ["CWE-319: Cleartext Transmission of Sensitive Information"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288386, "ref": "main", "syntactic_id": "ff07b919b2d0392d704a8a3d0fbca0ae", "match_based_id": "2a4910d4c31f61c93201115dba0cbf8e79416980e8bec659174988ddfc7374bddff8b916b808f0fd78bc96e8928fba34f8e1da084276d4c98bd73e30365f7ab7_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sqli2.html#L18", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "high", "created_at": "2024-08-19T14:19:00.941131Z", "relevant_since": "2024-08-19T14:19:00.924049Z", "rule_name": "html.security.plaintext-http-link.plaintext-http-link", "rule_message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "location": {"file_path": "templates/template.sqli2.html", "line": 18, "column": 29, "end_line": 18, "end_column": 112}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.plaintext-http-link.plaintext-http-link", "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "confidence": "high", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Mishandled Sensitive Information"], "cwe_names": ["CWE-319: Cleartext Transmission of Sensitive Information"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288385, "ref": "main", "syntactic_id": "f8e490014503b6ac974257088a68fb55", "match_based_id": "2a4910d4c31f61c93201115dba0cbf8e79416980e8bec659174988ddfc7374bddff8b916b808f0fd78bc96e8928fba34f8e1da084276d4c98bd73e30365f7ab7_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sqli2.html#L19", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "high", "created_at": "2024-08-19T14:19:00.941117Z", "relevant_since": "2024-08-19T14:19:00.924043Z", "rule_name": "html.security.plaintext-http-link.plaintext-http-link", "rule_message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "location": {"file_path": "templates/template.sqli2.html", "line": 19, "column": 29, "end_line": 19, "end_column": 128}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "html.security.plaintext-http-link.plaintext-http-link", "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "confidence": "high", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Mishandled Sensitive Information"], "cwe_names": ["CWE-319: Cleartext Transmission of Sensitive Information"], "owasp_names": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288384, "ref": "main", "syntactic_id": "5d11957decb257f65114ea02f34280c0", "match_based_id": "413f5710980c3455fdd1c330236be49c5a47b5abf18659f82a957a6b92370fa9bc484f44ab05f4042dffd14b30fd511353a099263b727a4681a539af0ff2fcfc_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/setup.sidebar.html#L12", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941104Z", "relevant_since": "2024-08-19T14:19:00.924038Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/setup.sidebar.html", "line": 12, "column": 25, "end_line": 12, "end_column": 52}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288383, "ref": "main", "syntactic_id": "7dae97488775c5733badf7e74f757119", "match_based_id": "413f5710980c3455fdd1c330236be49c5a47b5abf18659f82a957a6b92370fa9bc484f44ab05f4042dffd14b30fd511353a099263b727a4681a539af0ff2fcfc_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/setup.sidebar.html#L18", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941090Z", "relevant_since": "2024-08-19T14:19:00.924032Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/setup.sidebar.html", "line": 18, "column": 29, "end_line": 18, "end_column": 56}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288382, "ref": "main", "syntactic_id": "5b421a7773850e57aaa8d9f1ece0bd0b", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L12", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941077Z", "relevant_since": "2024-08-19T14:19:00.924027Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 12, "column": 25, "end_line": 12, "end_column": 52}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288381, "ref": "main", "syntactic_id": "4310b065c0dc6f96c0ba8f9fca16f280", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L18", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941063Z", "relevant_since": "2024-08-19T14:19:00.924020Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 18, "column": 29, "end_line": 18, "end_column": 56}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288380, "ref": "main", "syntactic_id": "e86ceea0306364cd79b22164127422db", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_2", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L27", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941050Z", "relevant_since": "2024-08-19T14:19:00.924014Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 27, "column": 29, "end_line": 27, "end_column": 71}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288379, "ref": "main", "syntactic_id": "cb05f41127b9d2086d0ba104ec8d02bb", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_3", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L28", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941036Z", "relevant_since": "2024-08-19T14:19:00.924009Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 28, "column": 29, "end_line": 28, "end_column": 84}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288378, "ref": "main", "syntactic_id": "63950f9fd3858e5bb212f1c64a79aeb5", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_4", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L36", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941023Z", "relevant_since": "2024-08-19T14:19:00.924004Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 36, "column": 29, "end_line": 36, "end_column": 69}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}, {"id": 82288377, "ref": "main", "syntactic_id": "7fd19896b7ad02c37ff3bcb5cc49a9ee", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_5", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L37", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.941010Z", "relevant_since": "2024-08-19T14:19:00.923998Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 37, "column": 29, "end_line": 37, "end_column": 82}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                        <li><a href=\"/{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 12, 'col': 25, 'offset': 495}, 'end': {'line': 12, 'col': 52, 'offset': 522}, 'extra': {'metavars': {'$1': {'start': {'line': 12, 'col': 33, 'offset': 503}, 'end': {'line': 12, 'col': 34, 'offset': 504}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_0', 'lines': '                        <a href=\"{{.weburl}}index\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 18, 'col': 29, 'offset': 703}, 'end': {'line': 18, 'col': 56, 'offset': 730}, 'extra': {'metavars': {'$1': {'start': {'line': 18, 'col': 37, 'offset': 711}, 'end': {'line': 18, 'col': 38, 'offset': 712}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_1', 'lines': '                            <a href=\"{{.weburl}}setup\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 27, 'col': 29, 'offset': 1245}, 'end': {'line': 27, 'col': 71, 'offset': 1287}, 'extra': {'metavars': {'$1': {'start': {'line': 27, 'col': 37, 'offset': 1253}, 'end': {'line': 27, 'col': 38, 'offset': 1254}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_2', 'lines': '                        <li><a href=\"{{.weburl}}sqli1\">SQLI 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 28, 'col': 29, 'offset': 1316}, 'end': {'line': 28, 'col': 84, 'offset': 1371}, 'extra': {'metavars': {'$1': {'start': {'line': 28, 'col': 37, 'offset': 1324}, 'end': {'line': 28, 'col': 38, 'offset': 1325}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_3', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 36, 'col': 29, 'offset': 1720}, 'end': {'line': 36, 'col': 69, 'offset': 1760}, 'extra': {'metavars': {'$1': {'start': {'line': 36, 'col': 37, 'offset': 1728}, 'end': {'line': 36, 'col': 38, 'offset': 1729}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_4', 'lines': '                        <li><a href=\"{{.weburl}}xss1\">XSS 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 37, 'col': 29, 'offset': 1789}, 'end': {'line': 37, 'col': 82, 'offset': 1842}, 'extra': {'metavars': {'$1': {'start': {'line': 37, 'col': 37, 'offset': 1797}, 'end': {'line': 37, 'col': 38, 'offset': 1798}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_5', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 45, 'col': 33, 'offset': 2275}, 'end': {'line': 45, 'col': 75, 'offset': 2317}, 'extra': {'metavars': {'$1': {'start': {'line': 45, 'col': 41, 'offset': 2283}, 'end': {'line': 45, 'col': 42, 'offset': 2284}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_6', 'lines': '                            <li><a href=\"{{.weburl}}idor1\">IDOR 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 46, 'col': 33, 'offset': 2350}, 'end': {'line': 46, 'col': 75, 'offset': 2392}, 'extra': {'metavars': {'$1': {'start': {'line': 46, 'col': 41, 'offset': 2358}, 'end': {'line': 46, 'col': 42, 'offset': 2359}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_7', 'lines': '                            <li><a href=\"{{.weburl}}idor2\">IDOR 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 57, 'col': 29, 'offset': 2897}, 'end': {'line': 57, 'col': 54, 'offset': 2922}, 'extra': {'metavars': {'$1': {'start': {'line': 57, 'col': 37, 'offset': 2905}, 'end': {'line': 57, 'col': 38, 'offset': 2906}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_8', 'lines': '                            <a href=\"{{.weburl}}csa\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 64, 'col': 29, 'offset': 3191}, 'end': {'line': 64, 'col': 58, 'offset': 3220}, 'extra': {'metavars': {'$1': {'start': {'line': 64, 'col': 37, 'offset': 3199}, 'end': {'line': 64, 'col': 38, 'offset': 3200}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_9', 'lines': '                            <a href=\"{{.weburl}}setting\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmp8e0m8gkw.html', 'start': {'line': 69, 'col': 29, 'offset': 3423}, 'end': {'line': 69, 'col': 57, 'offset': 3451}, 'extra': {'metavars': {'$1': {'start': {'line': 69, 'col': 37, 'offset': 3431}, 'end': {'line': 69, 'col': 38, 'offset': 3432}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '4b4a31e1a01a632f5b9cdbbd75aba117b197b278359a3a233c7f98b5d12594db3b0fd02d99757aa05adba9387c025fafb2e853f0556a74f1c075b2da7305618e_10', 'lines': '                            <a href=\"{{.weburl}}logout\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmp8e0m8gkw.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Ensure the `weburl` variable is sanitized, modify the `href` to start with a forward slash, and consider implementing a Content Security Policy.", "instructions": "1. Ensure that the `weburl` variable is properly validated and sanitized before being used in the template. This means checking that it only contains safe characters and does not include any potentially harmful protocols like `javascript:`.\n\n2. Modify the `href` attribute to start with a literal forward slash to ensure it is treated as a relative URL. Change `href=\"{{.weburl}}xss2?uid={{.uid}}\"` to `href=\"/{{.weburl}}xss2?uid={{.uid}}\"`.\n\n3. Consider implementing a Content Security Policy (CSP) header in your application to further mitigate the risk of XSS attacks. This can be done by setting the `Content-Security-Policy` HTTP header to restrict the sources from which content can be loaded. For example, you can set it to only allow scripts from the same origin with `Content-Security-Policy: script-src 'self';`.\n\nBy starting the URL with a literal forward slash, you ensure that the browser interprets it as a relative path, reducing the risk of executing malicious scripts."}, "component": null}}, {"id": 82288376, "ref": "main", "syntactic_id": "d369e20a708756364db22f6d866c0224", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_6", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L44", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940996Z", "relevant_since": "2024-08-19T14:19:00.923993Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 44, "column": 33, "end_line": 44, "end_column": 75}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                            <li><a href=\"/{{.weburl}}idor1\">IDOR 1</a></li>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 12, 'col': 25, 'offset': 495}, 'end': {'line': 12, 'col': 52, 'offset': 522}, 'extra': {'metavars': {'$1': {'start': {'line': 12, 'col': 33, 'offset': 503}, 'end': {'line': 12, 'col': 34, 'offset': 504}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_0', 'lines': '                        <a href=\"{{.weburl}}index\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 18, 'col': 29, 'offset': 703}, 'end': {'line': 18, 'col': 56, 'offset': 730}, 'extra': {'metavars': {'$1': {'start': {'line': 18, 'col': 37, 'offset': 711}, 'end': {'line': 18, 'col': 38, 'offset': 712}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_1', 'lines': '                            <a href=\"{{.weburl}}setup\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 27, 'col': 29, 'offset': 1245}, 'end': {'line': 27, 'col': 71, 'offset': 1287}, 'extra': {'metavars': {'$1': {'start': {'line': 27, 'col': 37, 'offset': 1253}, 'end': {'line': 27, 'col': 38, 'offset': 1254}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_2', 'lines': '                        <li><a href=\"{{.weburl}}sqli1\">SQLI 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 28, 'col': 29, 'offset': 1316}, 'end': {'line': 28, 'col': 84, 'offset': 1371}, 'extra': {'metavars': {'$1': {'start': {'line': 28, 'col': 37, 'offset': 1324}, 'end': {'line': 28, 'col': 38, 'offset': 1325}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_3', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 36, 'col': 29, 'offset': 1720}, 'end': {'line': 36, 'col': 69, 'offset': 1760}, 'extra': {'metavars': {'$1': {'start': {'line': 36, 'col': 37, 'offset': 1728}, 'end': {'line': 36, 'col': 38, 'offset': 1729}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_4', 'lines': '                        <li><a href=\"{{.weburl}}xss1\">XSS 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 37, 'col': 29, 'offset': 1789}, 'end': {'line': 37, 'col': 82, 'offset': 1842}, 'extra': {'metavars': {'$1': {'start': {'line': 37, 'col': 37, 'offset': 1797}, 'end': {'line': 37, 'col': 38, 'offset': 1798}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_5', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 44, 'col': 33, 'offset': 2192}, 'end': {'line': 44, 'col': 75, 'offset': 2234}, 'extra': {'metavars': {'$1': {'start': {'line': 44, 'col': 41, 'offset': 2200}, 'end': {'line': 44, 'col': 42, 'offset': 2201}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_6', 'lines': '                            <li><a href=\"{{.weburl}}idor1\">IDOR 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 46, 'col': 33, 'offset': 2343}, 'end': {'line': 46, 'col': 75, 'offset': 2385}, 'extra': {'metavars': {'$1': {'start': {'line': 46, 'col': 41, 'offset': 2351}, 'end': {'line': 46, 'col': 42, 'offset': 2352}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_7', 'lines': '                            <li><a href=\"{{.weburl}}idor2\">IDOR 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 57, 'col': 29, 'offset': 2890}, 'end': {'line': 57, 'col': 54, 'offset': 2915}, 'extra': {'metavars': {'$1': {'start': {'line': 57, 'col': 37, 'offset': 2898}, 'end': {'line': 57, 'col': 38, 'offset': 2899}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_8', 'lines': '                            <a href=\"{{.weburl}}csa\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 64, 'col': 29, 'offset': 3184}, 'end': {'line': 64, 'col': 58, 'offset': 3213}, 'extra': {'metavars': {'$1': {'start': {'line': 64, 'col': 37, 'offset': 3192}, 'end': {'line': 64, 'col': 38, 'offset': 3193}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_9', 'lines': '                            <a href=\"{{.weburl}}setting\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpas5a_o1j.html', 'start': {'line': 69, 'col': 29, 'offset': 3416}, 'end': {'line': 69, 'col': 57, 'offset': 3444}, 'extra': {'metavars': {'$1': {'start': {'line': 69, 'col': 37, 'offset': 3424}, 'end': {'line': 69, 'col': 38, 'offset': 3425}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '341dd66988f4895ffb95bb51dd12c60d64e0f5c3aa8812555abe5b5a31d505832bbac24c5670ab774ccbef7f9d85a2f4058dacfa860bd77a6162ba0b7d138121_10', 'lines': '                            <a href=\"{{.weburl}}logout\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpas5a_o1j.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Ensure the `weburl` variable is sanitized, use a relative URL, and consider implementing a Content Security Policy (CSP) header.", "instructions": "1. Ensure that the `weburl` variable is properly validated and sanitized before being used in the template. This means checking that it does not contain any unexpected or dangerous input, such as `javascript:` URIs.\n2. Modify the `href` attribute to start with a literal forward slash to ensure it is treated as a relative URL. Change `href=\"{{.weburl}}idor1\"` to `href=\"/{{.weburl}}idor1\"`.\n3. Consider implementing a Content Security Policy (CSP) header in your HTTP response to further mitigate XSS risks. This can be done by setting the `Content-Security-Policy` header to restrict the sources of scripts and other resources. For example, you can add a header like `Content-Security-Policy: default-src 'self'; script-src 'self';` to allow resources only from the same origin."}, "component": null}}, {"id": 82288375, "ref": "main", "syntactic_id": "a750c7f7a6ecee1bcdd266312577c46e", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_7", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L45", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940983Z", "relevant_since": "2024-08-19T14:19:00.923988Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 45, "column": 33, "end_line": 45, "end_column": 75}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                            <li><a href=\"/{{.weburl}}idor2\">IDOR 2</a></li>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 12, 'col': 25, 'offset': 495}, 'end': {'line': 12, 'col': 52, 'offset': 522}, 'extra': {'metavars': {'$1': {'start': {'line': 12, 'col': 33, 'offset': 503}, 'end': {'line': 12, 'col': 34, 'offset': 504}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_0', 'lines': '                        <a href=\"{{.weburl}}index\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 18, 'col': 29, 'offset': 703}, 'end': {'line': 18, 'col': 56, 'offset': 730}, 'extra': {'metavars': {'$1': {'start': {'line': 18, 'col': 37, 'offset': 711}, 'end': {'line': 18, 'col': 38, 'offset': 712}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_1', 'lines': '                            <a href=\"{{.weburl}}setup\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 27, 'col': 29, 'offset': 1245}, 'end': {'line': 27, 'col': 71, 'offset': 1287}, 'extra': {'metavars': {'$1': {'start': {'line': 27, 'col': 37, 'offset': 1253}, 'end': {'line': 27, 'col': 38, 'offset': 1254}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_2', 'lines': '                        <li><a href=\"{{.weburl}}sqli1\">SQLI 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 28, 'col': 29, 'offset': 1316}, 'end': {'line': 28, 'col': 84, 'offset': 1371}, 'extra': {'metavars': {'$1': {'start': {'line': 28, 'col': 37, 'offset': 1324}, 'end': {'line': 28, 'col': 38, 'offset': 1325}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_3', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 36, 'col': 29, 'offset': 1720}, 'end': {'line': 36, 'col': 69, 'offset': 1760}, 'extra': {'metavars': {'$1': {'start': {'line': 36, 'col': 37, 'offset': 1728}, 'end': {'line': 36, 'col': 38, 'offset': 1729}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_4', 'lines': '                        <li><a href=\"{{.weburl}}xss1\">XSS 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 37, 'col': 29, 'offset': 1789}, 'end': {'line': 37, 'col': 82, 'offset': 1842}, 'extra': {'metavars': {'$1': {'start': {'line': 37, 'col': 37, 'offset': 1797}, 'end': {'line': 37, 'col': 38, 'offset': 1798}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_5', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 44, 'col': 33, 'offset': 2192}, 'end': {'line': 44, 'col': 75, 'offset': 2234}, 'extra': {'metavars': {'$1': {'start': {'line': 44, 'col': 41, 'offset': 2200}, 'end': {'line': 44, 'col': 42, 'offset': 2201}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_6', 'lines': '                            <li><a href=\"{{.weburl}}idor1\">IDOR 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 45, 'col': 33, 'offset': 2267}, 'end': {'line': 45, 'col': 75, 'offset': 2309}, 'extra': {'metavars': {'$1': {'start': {'line': 45, 'col': 41, 'offset': 2275}, 'end': {'line': 45, 'col': 42, 'offset': 2276}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_7', 'lines': '                            <li><a href=\"{{.weburl}}idor2\">IDOR 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 57, 'col': 29, 'offset': 2890}, 'end': {'line': 57, 'col': 54, 'offset': 2915}, 'extra': {'metavars': {'$1': {'start': {'line': 57, 'col': 37, 'offset': 2898}, 'end': {'line': 57, 'col': 38, 'offset': 2899}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_8', 'lines': '                            <a href=\"{{.weburl}}csa\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 64, 'col': 29, 'offset': 3184}, 'end': {'line': 64, 'col': 58, 'offset': 3213}, 'extra': {'metavars': {'$1': {'start': {'line': 64, 'col': 37, 'offset': 3192}, 'end': {'line': 64, 'col': 38, 'offset': 3193}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_9', 'lines': '                            <a href=\"{{.weburl}}setting\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpiyz0rgg9.html', 'start': {'line': 69, 'col': 29, 'offset': 3416}, 'end': {'line': 69, 'col': 57, 'offset': 3444}, 'extra': {'metavars': {'$1': {'start': {'line': 69, 'col': 37, 'offset': 3424}, 'end': {'line': 69, 'col': 38, 'offset': 3425}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '901fa8df8a0544246930a1e2ce0d5d3cf0efab27dc15066b4f952494bba8d9150acc6898837ac406b80a35381d93c85e758d2129982a83bdc2d08e966ceb3b28_10', 'lines': '                            <a href=\"{{.weburl}}logout\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpiyz0rgg9.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Sanitize the `weburl` variable and modify the `href` attribute to start with a literal forward slash to prevent XSS.", "instructions": "1. Ensure that the `weburl` variable is properly sanitized before being used in the template. This means checking that it does not contain any malicious input, such as a `javascript:` URI.\n2. Modify the `href` attribute to start with a literal forward slash and concatenate the sanitized `weburl`. For example, change `href=\"{{.weburl}}idor2\"` to `href=\"/{{.weburl}}idor2\"`.\n3. Consider implementing a Content Security Policy (CSP) header in your application to further mitigate XSS risks. This can be done by setting the `Content-Security-Policy` header in your HTTP responses to restrict the sources of scripts and other resources."}, "component": null}}, {"id": 82288374, "ref": "main", "syntactic_id": "8f3e09d474f34438e9f424661799d5fe", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_8", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L56", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940969Z", "relevant_since": "2024-08-19T14:19:00.923983Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 56, "column": 29, "end_line": 56, "end_column": 54}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                            <a href=\"/{{.weburl}}csa\">\n                                <i class=\"fa fa-bug fa-lg\"></i> Client Side Auth\n                            </a>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 12, 'col': 25, 'offset': 495}, 'end': {'line': 12, 'col': 52, 'offset': 522}, 'extra': {'metavars': {'$1': {'start': {'line': 12, 'col': 33, 'offset': 503}, 'end': {'line': 12, 'col': 34, 'offset': 504}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_0', 'lines': '                        <a href=\"{{.weburl}}index\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 18, 'col': 29, 'offset': 703}, 'end': {'line': 18, 'col': 56, 'offset': 730}, 'extra': {'metavars': {'$1': {'start': {'line': 18, 'col': 37, 'offset': 711}, 'end': {'line': 18, 'col': 38, 'offset': 712}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_1', 'lines': '                            <a href=\"{{.weburl}}setup\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 27, 'col': 29, 'offset': 1245}, 'end': {'line': 27, 'col': 71, 'offset': 1287}, 'extra': {'metavars': {'$1': {'start': {'line': 27, 'col': 37, 'offset': 1253}, 'end': {'line': 27, 'col': 38, 'offset': 1254}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_2', 'lines': '                        <li><a href=\"{{.weburl}}sqli1\">SQLI 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 28, 'col': 29, 'offset': 1316}, 'end': {'line': 28, 'col': 84, 'offset': 1371}, 'extra': {'metavars': {'$1': {'start': {'line': 28, 'col': 37, 'offset': 1324}, 'end': {'line': 28, 'col': 38, 'offset': 1325}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_3', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 36, 'col': 29, 'offset': 1720}, 'end': {'line': 36, 'col': 69, 'offset': 1760}, 'extra': {'metavars': {'$1': {'start': {'line': 36, 'col': 37, 'offset': 1728}, 'end': {'line': 36, 'col': 38, 'offset': 1729}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_4', 'lines': '                        <li><a href=\"{{.weburl}}xss1\">XSS 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 37, 'col': 29, 'offset': 1789}, 'end': {'line': 37, 'col': 82, 'offset': 1842}, 'extra': {'metavars': {'$1': {'start': {'line': 37, 'col': 37, 'offset': 1797}, 'end': {'line': 37, 'col': 38, 'offset': 1798}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_5', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 44, 'col': 33, 'offset': 2192}, 'end': {'line': 44, 'col': 75, 'offset': 2234}, 'extra': {'metavars': {'$1': {'start': {'line': 44, 'col': 41, 'offset': 2200}, 'end': {'line': 44, 'col': 42, 'offset': 2201}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_6', 'lines': '                            <li><a href=\"{{.weburl}}idor1\">IDOR 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 45, 'col': 33, 'offset': 2267}, 'end': {'line': 45, 'col': 75, 'offset': 2309}, 'extra': {'metavars': {'$1': {'start': {'line': 45, 'col': 41, 'offset': 2275}, 'end': {'line': 45, 'col': 42, 'offset': 2276}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_7', 'lines': '                            <li><a href=\"{{.weburl}}idor2\">IDOR 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 56, 'col': 29, 'offset': 2814}, 'end': {'line': 56, 'col': 54, 'offset': 2839}, 'extra': {'metavars': {'$1': {'start': {'line': 56, 'col': 37, 'offset': 2822}, 'end': {'line': 56, 'col': 38, 'offset': 2823}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_8', 'lines': '                            <a href=\"{{.weburl}}csa\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 66, 'col': 29, 'offset': 3277}, 'end': {'line': 66, 'col': 58, 'offset': 3306}, 'extra': {'metavars': {'$1': {'start': {'line': 66, 'col': 37, 'offset': 3285}, 'end': {'line': 66, 'col': 38, 'offset': 3286}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_9', 'lines': '                            <a href=\"{{.weburl}}setting\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpivg35i9e.html', 'start': {'line': 71, 'col': 29, 'offset': 3509}, 'end': {'line': 71, 'col': 57, 'offset': 3537}, 'extra': {'metavars': {'$1': {'start': {'line': 71, 'col': 37, 'offset': 3517}, 'end': {'line': 71, 'col': 38, 'offset': 3518}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'aae569beb898c56ab0a7e47dcd2036e13792821df5f9ec2f28b9a09bf730e3439b2e6bb66a128e6721f3846f5fe85582bc5f682ffdb1e42d1a160b8b39c020ee_10', 'lines': '                            <a href=\"{{.weburl}}logout\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpivg35i9e.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Use a relative URL and validate the `weburl` variable to prevent XSS vulnerabilities.", "instructions": "1. Ensure that the `weburl` variable is properly validated and sanitized before being used in the template. This can be done by checking that it only contains expected characters and does not include any malicious input such as `javascript:` URIs.\n2. Modify the template to use a relative URL by starting the `href` attribute with a literal forward slash and concatenating the `weburl` variable. Change `href=\"{{.weburl}}csa\"` to `href=\"/{{.weburl}}csa\"`.\n3. Consider implementing a Content Security Policy (CSP) header in your application to further mitigate the risk of XSS attacks. This can be done by setting the `Content-Security-Policy` HTTP header to restrict the sources from which content can be loaded. For example, you can add a CSP header like `Content-Security-Policy: default-src 'self';` to allow content only from the same origin."}, "component": null}}, {"id": 82288373, "ref": "main", "syntactic_id": "096407b6c1933620a574be7d4a5bf8bd", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_9", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L63", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940956Z", "relevant_since": "2024-08-19T14:19:00.923976Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 63, "column": 29, "end_line": 63, "end_column": 58}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                            <a href=\"/{{.weburl}}setting\">\n                                <!-- Ensure the URL starts with a literal forward slash to prevent XSS attacks -->", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 12, 'col': 25, 'offset': 495}, 'end': {'line': 12, 'col': 52, 'offset': 522}, 'extra': {'metavars': {'$1': {'start': {'line': 12, 'col': 33, 'offset': 503}, 'end': {'line': 12, 'col': 34, 'offset': 504}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_0', 'lines': '                        <a href=\"{{.weburl}}index\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 18, 'col': 29, 'offset': 703}, 'end': {'line': 18, 'col': 56, 'offset': 730}, 'extra': {'metavars': {'$1': {'start': {'line': 18, 'col': 37, 'offset': 711}, 'end': {'line': 18, 'col': 38, 'offset': 712}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_1', 'lines': '                            <a href=\"{{.weburl}}setup\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 27, 'col': 29, 'offset': 1245}, 'end': {'line': 27, 'col': 71, 'offset': 1287}, 'extra': {'metavars': {'$1': {'start': {'line': 27, 'col': 37, 'offset': 1253}, 'end': {'line': 27, 'col': 38, 'offset': 1254}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_2', 'lines': '                        <li><a href=\"{{.weburl}}sqli1\">SQLI 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 28, 'col': 29, 'offset': 1316}, 'end': {'line': 28, 'col': 84, 'offset': 1371}, 'extra': {'metavars': {'$1': {'start': {'line': 28, 'col': 37, 'offset': 1324}, 'end': {'line': 28, 'col': 38, 'offset': 1325}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_3', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 36, 'col': 29, 'offset': 1720}, 'end': {'line': 36, 'col': 69, 'offset': 1760}, 'extra': {'metavars': {'$1': {'start': {'line': 36, 'col': 37, 'offset': 1728}, 'end': {'line': 36, 'col': 38, 'offset': 1729}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_4', 'lines': '                        <li><a href=\"{{.weburl}}xss1\">XSS 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 37, 'col': 29, 'offset': 1789}, 'end': {'line': 37, 'col': 82, 'offset': 1842}, 'extra': {'metavars': {'$1': {'start': {'line': 37, 'col': 37, 'offset': 1797}, 'end': {'line': 37, 'col': 38, 'offset': 1798}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_5', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 44, 'col': 33, 'offset': 2192}, 'end': {'line': 44, 'col': 75, 'offset': 2234}, 'extra': {'metavars': {'$1': {'start': {'line': 44, 'col': 41, 'offset': 2200}, 'end': {'line': 44, 'col': 42, 'offset': 2201}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_6', 'lines': '                            <li><a href=\"{{.weburl}}idor1\">IDOR 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 45, 'col': 33, 'offset': 2267}, 'end': {'line': 45, 'col': 75, 'offset': 2309}, 'extra': {'metavars': {'$1': {'start': {'line': 45, 'col': 41, 'offset': 2275}, 'end': {'line': 45, 'col': 42, 'offset': 2276}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_7', 'lines': '                            <li><a href=\"{{.weburl}}idor2\">IDOR 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 56, 'col': 29, 'offset': 2814}, 'end': {'line': 56, 'col': 54, 'offset': 2839}, 'extra': {'metavars': {'$1': {'start': {'line': 56, 'col': 37, 'offset': 2822}, 'end': {'line': 56, 'col': 38, 'offset': 2823}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_8', 'lines': '                            <a href=\"{{.weburl}}csa\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 63, 'col': 29, 'offset': 3108}, 'end': {'line': 63, 'col': 58, 'offset': 3137}, 'extra': {'metavars': {'$1': {'start': {'line': 63, 'col': 37, 'offset': 3116}, 'end': {'line': 63, 'col': 38, 'offset': 3117}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_9', 'lines': '                            <a href=\"{{.weburl}}setting\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpl456kk9e.html', 'start': {'line': 70, 'col': 29, 'offset': 3514}, 'end': {'line': 70, 'col': 57, 'offset': 3542}, 'extra': {'metavars': {'$1': {'start': {'line': 70, 'col': 37, 'offset': 3522}, 'end': {'line': 70, 'col': 38, 'offset': 3523}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'ae788eb4f4a28c3d68e08f3c596f6ab1046fa237d6f77650fa3fbd8581b1940558ab18b21d23a1f4b813c0d7f93df4b20ff9feed7441a7bc0b64862575ad8a63_10', 'lines': '                            <a href=\"{{.weburl}}logout\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpl456kk9e.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Ensure the `href` attribute uses a relative URL and consider implementing a Content Security Policy (CSP) header.", "instructions": "1. Change the `href` attribute to start with a literal forward slash to ensure it is a relative URL. Update the code to `href=\"/{{.weburl}}setting\"`.\n2. Consider implementing a Content Security Policy (CSP) header in your application to further mitigate XSS risks. This can be done by setting the `Content-Security-Policy` HTTP header to restrict the sources from which content can be loaded. For example, you can set it to `default-src 'self';` to only allow resources from the same origin."}, "component": null}}, {"id": 82288372, "ref": "main", "syntactic_id": "456df643a15caf4aa68657da0be39514", "match_based_id": "f09fcf2334d1509d99ae9d0d98f5f0a39ed57bed3a316eb773b3338c759010283ec4b82dedd31330b7c49f2c5be2995a4d295a78bbfd72ff83992652a67e99c9_10", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L68", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940943Z", "relevant_since": "2024-08-19T14:19:00.923971Z", "rule_name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 68, "column": 29, "end_line": 68, "end_column": 57}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.express.security.audit.xss.mustache.var-in-href.var-in-href", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                            <a href=\"/{{.weburl}}logout\">", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 12, 'col': 25, 'offset': 495}, 'end': {'line': 12, 'col': 52, 'offset': 522}, 'extra': {'metavars': {'$1': {'start': {'line': 12, 'col': 33, 'offset': 503}, 'end': {'line': 12, 'col': 34, 'offset': 504}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_0', 'lines': '                        <a href=\"{{.weburl}}index\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 18, 'col': 29, 'offset': 703}, 'end': {'line': 18, 'col': 56, 'offset': 730}, 'extra': {'metavars': {'$1': {'start': {'line': 18, 'col': 37, 'offset': 711}, 'end': {'line': 18, 'col': 38, 'offset': 712}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_1', 'lines': '                            <a href=\"{{.weburl}}setup\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 27, 'col': 29, 'offset': 1245}, 'end': {'line': 27, 'col': 71, 'offset': 1287}, 'extra': {'metavars': {'$1': {'start': {'line': 27, 'col': 37, 'offset': 1253}, 'end': {'line': 27, 'col': 38, 'offset': 1254}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_2', 'lines': '                        <li><a href=\"{{.weburl}}sqli1\">SQLI 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 28, 'col': 29, 'offset': 1316}, 'end': {'line': 28, 'col': 84, 'offset': 1371}, 'extra': {'metavars': {'$1': {'start': {'line': 28, 'col': 37, 'offset': 1324}, 'end': {'line': 28, 'col': 38, 'offset': 1325}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_3', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 36, 'col': 29, 'offset': 1720}, 'end': {'line': 36, 'col': 69, 'offset': 1760}, 'extra': {'metavars': {'$1': {'start': {'line': 36, 'col': 37, 'offset': 1728}, 'end': {'line': 36, 'col': 38, 'offset': 1729}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_4', 'lines': '                        <li><a href=\"{{.weburl}}xss1\">XSS 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 37, 'col': 29, 'offset': 1789}, 'end': {'line': 37, 'col': 82, 'offset': 1842}, 'extra': {'metavars': {'$1': {'start': {'line': 37, 'col': 37, 'offset': 1797}, 'end': {'line': 37, 'col': 38, 'offset': 1798}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_5', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 44, 'col': 33, 'offset': 2192}, 'end': {'line': 44, 'col': 75, 'offset': 2234}, 'extra': {'metavars': {'$1': {'start': {'line': 44, 'col': 41, 'offset': 2200}, 'end': {'line': 44, 'col': 42, 'offset': 2201}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_6', 'lines': '                            <li><a href=\"{{.weburl}}idor1\">IDOR 1</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 45, 'col': 33, 'offset': 2267}, 'end': {'line': 45, 'col': 75, 'offset': 2309}, 'extra': {'metavars': {'$1': {'start': {'line': 45, 'col': 41, 'offset': 2275}, 'end': {'line': 45, 'col': 42, 'offset': 2276}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_7', 'lines': '                            <li><a href=\"{{.weburl}}idor2\">IDOR 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 56, 'col': 29, 'offset': 2814}, 'end': {'line': 56, 'col': 54, 'offset': 2839}, 'extra': {'metavars': {'$1': {'start': {'line': 56, 'col': 37, 'offset': 2822}, 'end': {'line': 56, 'col': 38, 'offset': 2823}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_8', 'lines': '                            <a href=\"{{.weburl}}csa\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 63, 'col': 29, 'offset': 3108}, 'end': {'line': 63, 'col': 58, 'offset': 3137}, 'extra': {'metavars': {'$1': {'start': {'line': 63, 'col': 37, 'offset': 3116}, 'end': {'line': 63, 'col': 38, 'offset': 3117}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_9', 'lines': '                            <a href=\"{{.weburl}}setting\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..var-in-href', 'path': 'tmpgmt6c79o.html', 'start': {'line': 68, 'col': 29, 'offset': 3340}, 'end': {'line': 68, 'col': 57, 'offset': 3368}, 'extra': {'metavars': {'$1': {'start': {'line': 68, 'col': 37, 'offset': 3348}, 'end': {'line': 68, 'col': 38, 'offset': 3349}, 'abstract_content': '\"'}}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI', 'https://github.com/pugjs/pug/issues/2952'], 'category': 'security', 'technology': ['express'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '1c613c3a22bd50417a62b6d84c7a84d218190760c825efa4d140145b52ed69966e7642aebe6e97738f875163a1925c602debaaee669bab159cf0a002691e9677_10', 'lines': '                            <a href=\"{{.weburl}}logout\">', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpgmt6c79o.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Sanitize the `weburl` variable and update the `href` attribute to start with a literal forward slash.", "instructions": "1. Ensure that the `weburl` variable is properly sanitized before being used in the template. This means checking that it does not contain any malicious input, such as a `javascript:` URI.\n2. Update the `href` attribute to start with a literal forward slash and concatenate the sanitized URL. Change `href=\"{{.weburl}}logout\"` to `href=\"/{{.weburl}}logout\"`.\n3. Consider implementing a Content Security Policy (CSP) header in your application to further mitigate XSS risks. This can be done by setting the `Content-Security-Policy` HTTP header to restrict the sources of content that can be loaded on your web pages. For example, you can add a CSP header like `Content-Security-Policy: default-src 'self';` to allow content only from the same origin."}, "component": null}}, {"id": 82288371, "ref": "main", "syntactic_id": "809455d231edd8a00f9bec44232082df", "match_based_id": "5ddeb9ec3ca44e17a90c49e31c6c1b94cd8d2f4275f5e8e9178dbfac502c4f00c1df52196d80a3befce225ee17452ff34ee44fe6b50aba480b8ec7738a943d6a_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/public/js/jquery-3.2.1-min.js#L2", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940929Z", "relevant_since": "2024-08-19T14:19:00.923965Z", "rule_name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "rule_message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "location": {"file_path": "public/js/jquery-3.2.1-min.js", "line": 2, "column": 14873, "end_line": 2, "end_column": 14910}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "confidence": "low", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Denial-of-Service (DoS)"], "cwe_names": ["CWE-1333: Inefficient Regular Expression Complexity"], "owasp_names": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "vendored code", "risk": "low"}}}, {"id": 82288370, "ref": "main", "syntactic_id": "0a649b640f4b6217d7bc0eb5c194ec81", "match_based_id": "ea8079d387c003967090d84e3e7814fd574d9edd7c6481cc0e24c3baf84b7e48cf9ff725699e57c511a59375ffbf0ce71412a6c349d61d011c3e5a3622e19862_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/public/js/jquery-3.2.1-min.js#L3", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940915Z", "relevant_since": "2024-08-19T14:19:00.923960Z", "rule_name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "rule_message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "location": {"file_path": "public/js/jquery-3.2.1-min.js", "line": 3, "column": 9255, "end_line": 3, "end_column": 9310}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "confidence": "low", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Denial-of-Service (DoS)"], "cwe_names": ["CWE-1333: Inefficient Regular Expression Complexity"], "owasp_names": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "vendored code", "risk": "low"}}}, {"id": 82288369, "ref": "main", "syntactic_id": "1790dc1edefd084d734d00e056ea62db", "match_based_id": "ea8079d387c003967090d84e3e7814fd574d9edd7c6481cc0e24c3baf84b7e48cf9ff725699e57c511a59375ffbf0ce71412a6c349d61d011c3e5a3622e19862_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/public/js/jquery-3.2.1-min.js#L4", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940902Z", "relevant_since": "2024-08-19T14:19:00.923955Z", "rule_name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "rule_message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "location": {"file_path": "public/js/jquery-3.2.1-min.js", "line": 4, "column": 5105, "end_line": 4, "end_column": 5160}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "confidence": "low", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Denial-of-Service (DoS)"], "cwe_names": ["CWE-1333: Inefficient Regular Expression Complexity"], "owasp_names": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "vendored code", "risk": "low"}}}, {"id": 82288368, "ref": "main", "syntactic_id": "d4274b642fbd91055d35816163c9f930", "match_based_id": "24c8360ba4738f7cecb19d0d4c4e7c4a13d79c55871a1d5893ac6abb3358ed82f878a3ab3a35112b19a9afbe426e4aa2c78577d7bc8b25440886f00997587733_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/public/js/jquery-3.2.1-min.js#L2", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940888Z", "relevant_since": "2024-08-19T14:19:00.923949Z", "rule_name": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "rule_message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "location": {"file_path": "public/js/jquery-3.2.1-min.js", "line": 2, "column": 15678, "end_line": 2, "end_column": 15686}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Mass Assignment"], "cwe_names": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "owasp_names": ["A08:2021 - Software and Data Integrity Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "vendored code", "risk": "low"}}}, {"id": 82288367, "ref": "main", "syntactic_id": "b67d51156dea1ed7643732ff692fcad8", "match_based_id": "28c1fdcb4c5519ee68f7bee17d36537bf37c388172e0e6901e2bc29906023078c860e8430a74869d90aeccb6b6796db2aa7fb340d8772c96d1516a4fd09a90b2_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/public/js/jquery-3.2.1-min.js#L2", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940875Z", "relevant_since": "2024-08-19T14:19:00.923944Z", "rule_name": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "rule_message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "location": {"file_path": "public/js/jquery-3.2.1-min.js", "line": 2, "column": 26763, "end_line": 2, "end_column": 26771}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Mass Assignment"], "cwe_names": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "owasp_names": ["A08:2021 - Software and Data Integrity Failures"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "vendored code", "risk": "low"}}}, {"id": 82288366, "ref": "main", "syntactic_id": "f88166c0a74792eb1e1cbd158269da6b", "match_based_id": "51e840d8003c490d31819e97887ae45274af8f43de48ac2100373a2fc943e64ad655fa63720a1b72cf52feb3a82aeaae9a311dabc365e36842e02461dc4031db_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L28", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940862Z", "relevant_since": "2024-08-19T14:19:00.923938Z", "rule_name": "python.django.security.audit.xss.template-href-var.template-href-var", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 28, "column": 32, "end_line": 28, "end_column": 68}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "python.django.security.audit.xss.template-href-var.template-href-var", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                        <li><a href=\"{{ url .weburl \"sqli2\" (dict \"uid\" .uid) }}\">SQLI 2</a></li>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..template-href-var', 'path': 'tmp7phjb79o.html', 'start': {'line': 28, 'col': 32, 'offset': 1319}, 'end': {'line': 28, 'col': 68, 'offset': 1355}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['django'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '12586805f9b3dd4696fc828b65fe18025ca24ffdfde7e41da04bc417c41e47c867cf0aae953e515c97dd3d2d076e6d3f5cea3daaeff5bd16fe87190bd561b7a1_0', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..template-href-var', 'path': 'tmp7phjb79o.html', 'start': {'line': 29, 'col': 32, 'offset': 1403}, 'end': {'line': 29, 'col': 82, 'offset': 1453}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['django'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '12586805f9b3dd4696fc828b65fe18025ca24ffdfde7e41da04bc417c41e47c867cf0aae953e515c97dd3d2d076e6d3f5cea3daaeff5bd16fe87190bd561b7a1_1', 'lines': '                        <li><a href=\"{{ url .weburl \"sqli2\" (dict \"uid\" .uid) }}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..template-href-var', 'path': 'tmp7phjb79o.html', 'start': {'line': 38, 'col': 32, 'offset': 1890}, 'end': {'line': 38, 'col': 67, 'offset': 1925}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['django'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '12586805f9b3dd4696fc828b65fe18025ca24ffdfde7e41da04bc417c41e47c867cf0aae953e515c97dd3d2d076e6d3f5cea3daaeff5bd16fe87190bd561b7a1_2', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmp7phjb79o.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Use the `url` template function to safely construct URLs and consider setting a Content Security Policy (CSP) header.", "instructions": "1. Use the `url` template function to safely construct the URL. Replace the `href` attribute value with `{{ url .weburl \"sqli2\" (dict \"uid\" .uid) }}`.\n2. Ensure that the `url` function is defined in your template engine to properly handle URL construction and parameter encoding.\n3. Consider setting a Content Security Policy (CSP) header in your HTTP response to further mitigate XSS risks. This can be done by adding a header like `Content-Security-Policy: default-src 'self';` in your server configuration."}, "component": null}}, {"id": 82288365, "ref": "main", "syntactic_id": "96bb2d821ca2f656954255f35beb4d40", "match_based_id": "51e840d8003c490d31819e97887ae45274af8f43de48ac2100373a2fc943e64ad655fa63720a1b72cf52feb3a82aeaae9a311dabc365e36842e02461dc4031db_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L37", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940848Z", "relevant_since": "2024-08-19T14:19:00.923931Z", "rule_name": "python.django.security.audit.xss.template-href-var.template-href-var", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 37, "column": 32, "end_line": 37, "end_column": 67}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "python.django.security.audit.xss.template-href-var.template-href-var", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                        <li><a href=\"{{url .weburl}}xss2?uid={{url .uid}}\">XSS 2</a></li>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..template-href-var', 'path': 'tmpbv6xakhs.html', 'start': {'line': 28, 'col': 32, 'offset': 1319}, 'end': {'line': 28, 'col': 68, 'offset': 1355}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['django'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'c927fa0effc62fb5a1f2f376102823ab7118ca9b17c5d09c8ac37e5f63ef5d5d847625d72a3dee46e7105aedf2b6684f3b5210f0d96e15dae811a7fe8e93e318_0', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..template-href-var', 'path': 'tmpbv6xakhs.html', 'start': {'line': 37, 'col': 32, 'offset': 1792}, 'end': {'line': 37, 'col': 67, 'offset': 1827}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['django'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'c927fa0effc62fb5a1f2f376102823ab7118ca9b17c5d09c8ac37e5f63ef5d5d847625d72a3dee46e7105aedf2b6684f3b5210f0d96e15dae811a7fe8e93e318_1', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..template-href-var', 'path': 'tmpbv6xakhs.html', 'start': {'line': 38, 'col': 32, 'offset': 1874}, 'end': {'line': 38, 'col': 75, 'offset': 1917}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#url', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['django'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': 'c927fa0effc62fb5a1f2f376102823ab7118ca9b17c5d09c8ac37e5f63ef5d5d847625d72a3dee46e7105aedf2b6684f3b5210f0d96e15dae811a7fe8e93e318_2', 'lines': '                        <li><a href=\"{{url .weburl}}xss2?uid={{url .uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpbv6xakhs.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Validate the URL and UID inputs and consider setting a Content Security Policy (CSP) header.", "instructions": "1. Use a URL validation function to ensure that the `weburl` and `uid` variables do not contain malicious input. You can create a function that checks if the URL starts with a safe protocol like `http` or `https`.\n\n2. Update the template to use the validated URL. Replace the current line with:\n   ```html\n   <li><a href=\"{{ validateURL .weburl }}xss2?uid={{ validateUID .uid }}\">XSS 2</a></li>\n   ```\n   Ensure `validateURL` and `validateUID` are functions that sanitize and validate the input.\n\n3. Consider setting a Content Security Policy (CSP) header in your HTTP response to further mitigate XSS risks. This can be done by adding a header like:\n   ```\n   Content-Security-Policy: default-src 'self'; script-src 'self'; object-src 'none';\n   ```\n   This policy restricts the sources from which scripts can be loaded, reducing the risk of XSS attacks."}, "component": null}}, {"id": 82288364, "ref": "main", "syntactic_id": "7e94531496f70c91aeaf68ae6d736aa7", "match_based_id": "4b6d3a1ae1312f1dbb369a79c7add3c4652338bdef8317fd1c84828085893a94062126f22ac3ab1712528c14071ef34722adafe8a2b9d148ef6dbde4e7448838_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.login.html#L29", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "medium", "created_at": "2024-08-19T14:19:00.940834Z", "relevant_since": "2024-08-19T14:19:00.923924Z", "rule_name": "python.django.security.django-no-csrf-token.django-no-csrf-token", "rule_message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "location": {"file_path": "templates/template.login.html", "line": 29, "column": 25, "end_line": 39, "end_column": 32}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "python.django.security.django-no-csrf-token.django-no-csrf-token", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "confidence": "medium", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site Request Forgery (CSRF)"], "cwe_names": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "owasp_names": []}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "user authentication", "risk": "high"}}}, {"id": 82288363, "ref": "main", "syntactic_id": "d9ebed6d35aa0e792a5fc8b268fe3a9f", "match_based_id": "9872b9497c1b57fb2aa035f9c3e0506db56bffa800ffa7ad98c8658a59ce09ab699112c0a89e2043f6654e6749e0eb128456ee486d92f14c8033003bb65f94da_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L28", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940821Z", "relevant_since": "2024-08-19T14:19:00.923918Z", "rule_name": "python.flask.security.xss.audit.template-href-var.template-href-var", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 28, "column": 32, "end_line": 28, "end_column": 68}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "python.flask.security.xss.audit.template-href-var.template-href-var", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                        <!-- Fixing potential XSS vulnerability by using url_for() to safely generate the URL -->\n                        <li><a href=\"{{ url_for('sqli2', uid=.uid) }}\">SQLI 2</a></li>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..template-href-var', 'path': 'tmpiwnq94ev.html', 'start': {'line': 28, 'col': 32, 'offset': 1319}, 'end': {'line': 28, 'col': 68, 'offset': 1355}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['flask'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '93f6885e6150f334396f9d41df0007344ee7592ed3a0de777b5bf98f54fc996d1d1764e86bfb15a86db0679eeecf62a12852e4f39bb45e1566cba8e8f48ea539_0', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..template-href-var', 'path': 'tmpiwnq94ev.html', 'start': {'line': 39, 'col': 32, 'offset': 1993}, 'end': {'line': 39, 'col': 67, 'offset': 2028}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['flask'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '93f6885e6150f334396f9d41df0007344ee7592ed3a0de777b5bf98f54fc996d1d1764e86bfb15a86db0679eeecf62a12852e4f39bb45e1566cba8e8f48ea539_1', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpiwnq94ev.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Use Go's `net/url` package to safely construct URLs instead of directly embedding variables in the `href` attribute.", "instructions": "1. Replace the `href` attribute value with a call to a function that safely constructs the URL. If you are using a Go web framework, you can use `url.URL` to construct the URL safely.\n2. Import the `net/url` package at the top of your Go file with `import \"net/url\"`.\n3. Create a new URL object using `url.Parse` and set the path and query parameters. For example:\n   ```go\n   base, _ := url.Parse(weburl)\n   base.Path += \"sqli2\"\n   params := url.Values{}\n   params.Add(\"uid\", uid)\n   base.RawQuery = params.Encode()\n   ```\n4. Use the constructed URL in your template. Replace `href=\"{{.weburl}}sqli2?uid={{.uid}}\"` with `href=\"{{.ConstructedURL}}\"`.\n5. Ensure that the `ConstructedURL` is passed to the template from your Go handler function. For example:\n   ```go\n   tmpl.Execute(w, struct{ ConstructedURL string }{ConstructedURL: base.String()})\n   ```\n\nThis approach ensures that the URL is properly encoded and prevents injection of malicious content."}, "component": null}}, {"id": 82288362, "ref": "main", "syntactic_id": "c6514d1da01513c38e045ae2fe2f32bd", "match_based_id": "9872b9497c1b57fb2aa035f9c3e0506db56bffa800ffa7ad98c8658a59ce09ab699112c0a89e2043f6654e6749e0eb128456ee486d92f14c8033003bb65f94da_1", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/templates/template.sidebar.html#L37", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940807Z", "relevant_since": "2024-08-19T14:19:00.923912Z", "rule_name": "python.flask.security.xss.audit.template-href-var.template-href-var", "rule_message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "location": {"file_path": "templates/template.sidebar.html", "line": 37, "column": 32, "end_line": 37, "end_column": 67}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "python.flask.security.xss.audit.template-href-var.template-href-var", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65703, "name": "Rule Board - PR Comments column", "slug": "rule-board-pr-comments"}, "assistant": {"autofix": {"fix_code": "                        <li><a href=\"{{ url_for('xss2', uid=uid) }}\">XSS 2</a></li>", "explanation": "The fix did not remove the finding on the lines associated to the finding. Your objective is to edit your fix to remove the finding while keeping in mind the intention of the autofix. Here is the output:\n {'version': '1.59.0', 'errors': [], 'results': [{'check_id': '..template-href-var', 'path': 'tmpsbr8gcy0.html', 'start': {'line': 28, 'col': 32, 'offset': 1319}, 'end': {'line': 28, 'col': 68, 'offset': 1355}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['flask'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '6bb83d5fee36319330efaf54616c547be6ee0997aabfd9de624796302d4a3ad5b96d2a96520de1d214f481c741d8b90722de314fbc35585499a389b9e209d21c_0', 'lines': '                        <li><a href=\"{{.weburl}}sqli2?uid={{.uid}}\">SQLI 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}, {'check_id': '..template-href-var', 'path': 'tmpsbr8gcy0.html', 'start': {'line': 37, 'col': 32, 'offset': 1792}, 'end': {'line': 37, 'col': 67, 'offset': 1827}, 'extra': {'metavars': {}, 'message': \"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content Security Policy (CSP) header.\", 'metadata': {'cwe': [\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"], 'owasp': ['A07:2017 - Cross-Site Scripting (XSS)', 'A03:2021 - Injection'], 'references': ['https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss', 'https://content-security-policy.com/'], 'category': 'security', 'technology': ['flask'], 'cwe2022-top25': True, 'cwe2021-top25': True, 'subcategory': ['audit'], 'likelihood': 'LOW', 'impact': 'MEDIUM', 'confidence': 'LOW', 'license': 'Commons Clause License Condition v1.0[LGPL-2.1-only]', 'vulnerability_class': ['Cross-Site-Scripting (XSS)']}, 'severity': 'WARNING', 'fingerprint': '6bb83d5fee36319330efaf54616c547be6ee0997aabfd9de624796302d4a3ad5b96d2a96520de1d214f481c741d8b90722de314fbc35585499a389b9e209d21c_1', 'lines': '                        <li><a href=\"{{.weburl}}xss2?uid={{.uid}}\">XSS 2</a></li>', 'is_ignored': False, 'engine_kind': 'PRO', 'validation_state': 'NO_VALIDATOR'}}], 'paths': {'scanned': ['./tmpsbr8gcy0.html']}, 'interfile_languages_used': [], 'skipped_rules': []}"}, "autotriage": {"verdict": "true_positive", "reason": ""}, "guidance": {"summary": "Use a safe URL generation function like `url_for` to construct URLs in templates and consider setting a Content Security Policy header.", "instructions": "1. Replace the `href` attribute value with a call to a function that safely constructs the URL. If you are using a templating language that supports functions like `url_for`, use it to generate the URL.\n   For example, replace `href=\"{{.weburl}}xss2?uid={{.uid}}\"` with `href=\"{{ url_for('xss2', uid=.uid) }}\"`.\n2. Ensure that the `url_for` function or equivalent is correctly imported and used in your template rendering logic.\n3. Consider setting a Content Security Policy (CSP) header in your HTTP response to further mitigate XSS risks. This can be done by adding a header like `Content-Security-Policy: default-src 'self';` in your server-side code."}, "component": null}}, {"id": 82288361, "ref": "main", "syntactic_id": "02b05cf69e4d0551a03b5c166c2190f3", "match_based_id": "0fe61e4e0016cd88ba6a07f7b47eb0d03a919ae1ce6e8ebc5ea7d0d5dbc84126cdf483450cf1e0a765d79cc44e490e1f7d966515281d29042b525313bf4da0f4_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/docker-compose.yml#L14", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940793Z", "relevant_since": "2024-08-19T14:19:00.923907Z", "rule_name": "yaml.docker-compose.security.no-new-privileges.no-new-privileges", "rule_message": "Service 'db-mysql' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.", "location": {"file_path": "docker-compose.yml", "line": 14, "column": 3, "end_line": 14, "end_column": 11}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "yaml.docker-compose.security.no-new-privileges.no-new-privileges", "message": "Service 'db-mysql' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Improper Authorization"], "cwe_names": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "owasp_names": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "infrastructure", "risk": "high"}}}, {"id": 82288360, "ref": "main", "syntactic_id": "9856a6ebf17a43827b619a3380abe912", "match_based_id": "f45c5ffc53346a5f18f3cc3107a3676496dd84a2e53f9ec259988c119e89b05ff529bb0948ebd0ee52ee15bad42402acdec97f33b520b7b529934f0a14be54ea_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/docker-compose.yml#L14", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "low", "created_at": "2024-08-19T14:19:00.940778Z", "relevant_since": "2024-08-19T14:19:00.923901Z", "rule_name": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "rule_message": "Service 'db-mysql' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.", "location": {"file_path": "docker-compose.yml", "line": 14, "column": 3, "end_line": 14, "end_column": 11}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "message": "Service 'db-mysql' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.", "confidence": "low", "category": "security", "subcategories": ["audit"], "vulnerability_classes": ["Improper Authorization"], "cwe_names": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "owasp_names": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": {"tag": "infrastructure", "risk": "high"}}}, {"id": 82288359, "ref": "main", "syntactic_id": "dbc19a53f60f95ddec966027fc842aab", "match_based_id": "a754677ecdb1b0e10e7dfc05946d216ea10c52074bce9a508dba78908222b1a21cb6d33093102d4dba48b4b409c979a929d591b56ae08ce352105ab43ca08a1b_0", "repository": {"name": "Semgrep-Demo/go-app", "url": "https://github.com/Semgrep-Demo/go-app"}, "line_of_code_url": "https://github.com/Semgrep-Demo/go-app/blob/b29c716a2548ed8ade1e85d8afa9e69bece93736/vulnerability/xss/xss.go#L100", "first_seen_scan_id": 34498870, "state": "unresolved", "triage_state": "untriaged", "status": "open", "confidence": "high", "created_at": "2024-08-19T14:19:00.940743Z", "relevant_since": "2024-08-19T14:19:00.923886Z", "rule_name": "semgrep_demo.formatted-template-string-taint-copy", "rule_message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. For more information, see: [Go XSS prevention](https://semgrep.dev/docs/cheat-sheets/go-xss/). ", "location": {"file_path": "vulnerability/xss/xss.go", "line": 100, "column": 21, "end_line": 100, "end_column": 44}, "triaged_at": null, "triage_comment": null, "triage_reason": null, "state_updated_at": null, "categories": ["security"], "rule": {"name": "semgrep_demo.formatted-template-string-taint-copy", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. For more information, see: [Go XSS prevention](https://semgrep.dev/docs/cheat-sheets/go-xss/). ", "confidence": "high", "category": "security", "subcategories": ["vuln"], "vulnerability_classes": ["Cross-Site-Scripting (XSS)"], "cwe_names": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "owasp_names": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"]}, "external_ticket": null, "severity": "medium", "sourcing_policy": {"id": 65705, "name": "Rule Board - Audit column", "slug": "rule-board-audit"}, "assistant": {"autofix": null, "autotriage": null, "guidance": null, "component": null}}]